{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport './style.css'; // 相対パスでCSSを指定\n\nexport default {\n  data() {\n    return {\n      newItem: \"\",\n      // 入力中のアイテム\n      todos: [],\n      // ToDoリストのアイテム\n      pendingItem: \"\" // 確認中のアイテム\n    };\n  },\n  methods: {\n    confirmItem() {\n      // 入力が空でない場合、確認用にpendingItemを設定\n      if (this.newItem.trim() !== \"\") {\n        this.pendingItem = this.newItem.trim();\n        this.newItem = \"\"; // 入力欄をクリア\n      }\n    },\n    addItem() {\n      // 確認されたアイテムをリストに追加\n      this.todos.push(this.pendingItem);\n      this.pendingItem = \"\"; // 確認状態をリセット\n    },\n    cancel() {\n      // 確認をキャンセル\n      this.pendingItem = \"\";\n    },\n    removeItem(index) {\n      // 指定されたインデックスのアイテムを削除\n      this.todos.splice(index, 1);\n    }\n  }\n};","map":{"version":3,"names":["data","newItem","todos","pendingItem","methods","confirmItem","trim","addItem","push","cancel","removeItem","index","splice"],"sources":["/Users/takuhara-alt/Desktop/web/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- タイトル -->\n    <h1>My ToDo List</h1>\n\n    <!-- ナビゲーションリスト -->\n    <ul class=\"list-grope\">\n      <li class=\"list-grope-li\"><router-link to=\"/\">Home</router-link></li>\n      <li class=\"list-grope-li\"><router-link to=\"/about\">About</router-link></li>\n      <li class=\"list-grope-li\"><router-link to=\"/Settings\">Settings</router-link></li>\n    </ul>\n\n    <!-- 入力フォーム -->\n    <div class=\"todo-section\">\n      <input\n          type=\"text\"\n          v-model=\"newItem\"\n          placeholder=\"新しいアイテムを入力\"\n      />\n      <button @click=\"confirmItem\" class=\"confirm-btn\">確認</button>\n    </div>\n\n    <!-- 確認テキスト -->\n    <p v-if=\"pendingItem\" class=\"confirmation\">\n      「{{ pendingItem }}」を追加しますか？\n      <button @click=\"addItem\" class=\"add-btn\">追加</button>\n      <button @click=\"cancel\" class=\"cancel-btn\">キャンセル</button>\n    </p>\n\n    <!-- ToDoリスト -->\n    <ul class=\"ul-grope\">\n      <li v-for=\"(item, index) in todos\" :key=\"index\">\n        <span>{{ item }}</span>\n        <button @click=\"removeItem(index)\" class=\"delete-btn\">削除</button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport './style.css'; // 相対パスでCSSを指定\n\nexport default {\n  data() {\n    return {\n      newItem: \"\",     // 入力中のアイテム\n      todos: [],       // ToDoリストのアイテム\n      pendingItem: \"\"  // 確認中のアイテム\n    };\n  },\n  methods: {\n    confirmItem() {\n      // 入力が空でない場合、確認用にpendingItemを設定\n      if (this.newItem.trim() !== \"\") {\n        this.pendingItem = this.newItem.trim();\n        this.newItem = \"\"; // 入力欄をクリア\n      }\n    },\n    addItem() {\n      // 確認されたアイテムをリストに追加\n      this.todos.push(this.pendingItem);\n      this.pendingItem = \"\"; // 確認状態をリセット\n    },\n    cancel() {\n      // 確認をキャンセル\n      this.pendingItem = \"\";\n    },\n    removeItem(index) {\n      // 指定されたインデックスのアイテムを削除\n      this.todos.splice(index, 1);\n    }\n  }\n};\n</script>"],"mappings":";AAwCA,OAAO,aAAa,EAAE;;AAEtB,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MAAM;MACjBC,KAAK,EAAE,EAAE;MAAQ;MACjBC,WAAW,EAAE,EAAC,CAAG;IACnB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ;MACA,IAAI,IAAI,CAACJ,OAAO,CAACK,IAAI,CAAC,MAAM,EAAE,EAAE;QAC9B,IAAI,CAACH,WAAU,GAAI,IAAI,CAACF,OAAO,CAACK,IAAI,CAAC,CAAC;QACtC,IAAI,CAACL,OAAM,GAAI,EAAE,EAAE;MACrB;IACF,CAAC;IACDM,OAAOA,CAAA,EAAG;MACR;MACA,IAAI,CAACL,KAAK,CAACM,IAAI,CAAC,IAAI,CAACL,WAAW,CAAC;MACjC,IAAI,CAACA,WAAU,GAAI,EAAE,EAAE;IACzB,CAAC;IACDM,MAAMA,CAAA,EAAG;MACP;MACA,IAAI,CAACN,WAAU,GAAI,EAAE;IACvB,CAAC;IACDO,UAAUA,CAACC,KAAK,EAAE;MAChB;MACA,IAAI,CAACT,KAAK,CAACU,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAC7B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}