{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = [\"onUpdate:modelValue\"];\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"My ToDo List\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newTodo = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.addTodo && $options.addTodo(...args), [\"enter\"])),\n    placeholder: \"Add a new todo\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.newTodo]]), _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, [_createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"Home\")])),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"li\", null, [_createVNode(_component_router_link, {\n    to: \"/about\"\n  }, {\n    default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"About\")])),\n    _: 1 /* STABLE */\n  })]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.todos, (todo, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => todo.completed = $event\n    }, null, 8 /* PROPS */, _hoisted_2), [[_vModelCheckbox, todo.completed]]), _createElementVNode(\"span\", {\n      class: _normalizeClass({\n        completed: todo.completed\n      })\n    }, _toDisplayString(todo.text), 3 /* TEXT, CLASS */), _createElementVNode(\"button\", {\n      onClick: $event => $options.removeTodo(index)\n    }, \"Remove\", 8 /* PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createElementVNode","_cache","$event","$data","newTodo","onKeyup","_withKeys","args","$options","addTodo","placeholder","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_","_Fragment","_renderList","todos","todo","index","key","type","completed","_hoisted_2","class","_normalizeClass","text","onClick","removeTodo","_hoisted_3"],"sources":["/Users/takuhara-alt/Desktop/web/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>My ToDo List</h1>\n    <input v-model=\"newTodo\" @keyup.enter=\"addTodo\" placeholder=\"Add a new todo\" />\n    <ul>\n      <li><router-link to=\"/\">Home</router-link></li>\n      <li><router-link to=\"/about\">About</router-link></li>\n      <li v-for=\"(todo, index) in todos\" :key=\"index\">\n        <input type=\"checkbox\" v-model=\"todo.completed\" />\n        <span :class=\"{ completed: todo.completed }\">{{ todo.text }}</span>\n        <button @click=\"removeTodo(index)\">Remove</button>\n\n      </li>\n\n\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      newTodo: '',  // 新しいタスクのテキスト\n      todos: [      // ToDoリストのデータ\n        { text: 'Learn Vue.js', completed: false },\n        { text: 'Build a Vue app', completed: false }\n      ]\n    };\n  },\n  methods: {\n    // 新しいToDoを追加するメソッド\n    addTodo() {\n      if (this.newTodo.trim()) {\n        this.todos.push({ text: this.newTodo, completed: false });\n        this.newTodo = '';  // 入力フィールドをリセット\n      }\n    },\n    // ToDoを削除するメソッド\n    removeTodo(index) {\n      this.todos.splice(index, 1);\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* 完了したタスクにスタイルを追加 */\n.completed {\n  text-decoration: line-through;\n  color: gray;\n}\n\n#app {\n  max-width: 400px;\n  margin: 0 auto;\n  text-align: center;\n}\n\ninput[type=\"text\"] {\n  padding: 8px;\n  margin: 10px;\n  width: 80%;\n  box-sizing: border-box;\n}\n\nbutton {\n  margin-left: 10px;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;mBADf;mBAAA;;;uBACEC,mBAAA,CAeM,OAfNC,UAeM,G,0BAdJC,mBAAA,CAAqB,YAAjB,cAAY,sB,gBAChBA,mBAAA,CAA+E;IAHnF,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGoBC,KAAA,CAAAC,OAAO,GAAAF,MAAA;IAAGG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAHnCK,SAAA,KAAAC,IAAA,KAG2CC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;IAAEG,WAAW,EAAC;iEAA5CP,KAAA,CAAAC,OAAO,E,GACvBJ,mBAAA,CAWK,aAVHA,mBAAA,CAA+C,aAA3CW,YAAA,CAAsCC,sBAAA;IAAzBC,EAAE,EAAC;EAAG;IAL7BC,OAAA,EAAAC,QAAA,CAK8B,MAAId,MAAA,QAAAA,MAAA,OALlCe,gBAAA,CAK8B,MAAI,E;IALlCC,CAAA;QAMMjB,mBAAA,CAAqD,aAAjDW,YAAA,CAA4CC,sBAAA;IAA/BC,EAAE,EAAC;EAAQ;IANlCC,OAAA,EAAAC,QAAA,CAMmC,MAAKd,MAAA,QAAAA,MAAA,OANxCe,gBAAA,CAMmC,OAAK,E;IANxCC,CAAA;2BAOMnB,mBAAA,CAKKoB,SAAA,QAZXC,WAAA,CAOkChB,KAAA,CAAAiB,KAAK,EAPvC,CAOkBC,IAAI,EAAEC,KAAK;yBAAvBxB,mBAAA,CAKK;MAL+ByB,GAAG,EAAED;IAAK,I,gBAC5CtB,mBAAA,CAAkD;MAA3CwB,IAAI,EAAC,UAAU;MAR9B,uBAAAtB,MAAA,IAQwCmB,IAAI,CAACI,SAAS,GAAAvB;4BARtDwB,UAAA,I,kBAQwCL,IAAI,CAACI,SAAS,E,GAC9CzB,mBAAA,CAAmE;MAA5D2B,KAAK,EATpBC,eAAA;QAAAH,SAAA,EASmCJ,IAAI,CAACI;MAAS;wBAAOJ,IAAI,CAACQ,IAAI,yBACzD7B,mBAAA,CAAkD;MAAzC8B,OAAK,EAAA5B,MAAA,IAAEM,QAAA,CAAAuB,UAAU,CAACT,KAAK;OAAG,QAAM,iBAVjDU,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}